Agents {#agents}
=====================

[=Agents=] represent the primary actors in an interoperable Solid [=ecosystem=].

An [=Agent=] is denoted by an [=identity=]. Dereferencing that [=identity=]
leads to [=identity profile document=], where a graph of useful information 
about the [=Agent=] can be found. This graph is used by the [=Agent=] 
as a starting point to look up their own data, as well as data that has 
been shared with them. 

The [=Agent=] graph in an [=identity profile document=] is designed to be 
publicly accessible, but many of the things the [=Agent=] links to are 
designed to be private, or accessible only by other [=Trusted Agents=] 
that the [=Agent=] has authorized.

Consequently, other [=Agents=] and
[=Applications=] can dereference the [=identity=] of an [=Agent=] to obtain 
the public information they need to interact with them. Notable interactions
include sharing data with the [=Agent=] or requesting access to the 
[=Agent's=] data.

Most of an [=Agent's=] information is stored in [=Registries=].
A <dfn>Registry</dfn> is a place where an [=Agent=] can store and find
different types of data, often for particular purposes. Each type
of [=Registry=] serves a specific purpose or function.

<table class="classinfo data" align="left" id="agentRegistries">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr>
      <th>Registry</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Application Registry</td>
      <td>Records the [=Applications=] that a given [=Agent=] uses
      or has given access to.
      <i>See [[#appreg|Application Registration]]</i></td>
    </tr>
    <tr>
      <td>Data Registry</td>
      <td>Stores and organizes data types for interoperable use by different
      [=Applications=] and shared with other [=Agents=]
      <i>See [[#datareg|Data Registration]]</i></td>
    </tr>
    <tr>
      <td>Access Grant Registry</td>
      <td>Records access granted to other [=Agents=] and/or [=Applications=]
      <i>See [[#grants|Access Grants]]</i></td>
    </tr>
    <tr>
      <td>Access Receipt Registry</td>
      <td>Tracks access that has been granted by other [=Agents=]
      <i>See [[#receipts|Access Receipts]]</i></td>
    </tr>
    <tr>
      <td>Remote Data Registry</td>
      <td>Local references to data that has been shared by other [=Agents=]
      <i>See [[#remote|Remote Data Registration]]</i></td>
    </tr>
  </tbody>
</table>

## Agent ## {#datamodel-agent}

An <dfn>Agent</dfn> is a distinct individual, group, organization, or piece
of software with an [=identity=] that can be strongly authenticated.

An [=Agent=] stores a list of its [=Registries=] in a [=Registry Set=],
which must be a separate resource from the [=identity profile document=]
that the [=Agent=] graph resides in so that it can be give more
restrictive (i.e. non-public) permissions.

[Class Definition](interop.ttl#Agent) -
[Shape Definition](interop.shex#AgentShape) -
[Shape Tree Definition](interop.tree#AgentTree)

<table class="classinfo data" align="left" id="classAgent">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr>
      <th>Property</th>
      <th>Range</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>hasRegistrySet</td>
      <td>[RegistrySet](#classRegistrySet)</td>
      <td>[=Registry Set=] for the [=Agent=]</td>
    </tr>
    <tr>
      <td>hasAuthorizationAgent</td>
      <td>[Application](#classApplication)</td>
      <td>The software used by the Agent to manage access to their data</td>
    </tr>
    <tr>
      <td>hasInbox</td>
      <td>ldp:inbox</td>
      <td>A general inbox for messages sent to the [=Agent=]</td>
    </tr>
    <tr>
      <td>hasAccessInbox</td>
      <td>ldp:inbox</td>
      <td>An inbox for access related messages sent to the [=Agent=]</td>
    </tr>
    <tr>
      <td>receivesAccessReceipt</td>
      <td>interop:ReceiptInMessage,
      interop:ReceiptInRegistration</td>
      <td>Identifies whether [=Access Receipts=] should be sent directly
      to the [=Application=] or provided in the [=Application Registration=]
      if the [=Agent=] is also an [=Application=]</td>      
    </tr>
  </tbody>
</table>

<figure>
  <figcaption>[=Agent=] at https://alice.example/#id</figcaption>  
  <pre class=include-code>
  path: snippets/alice.example/alice.example.ttl
  highlight: turtle
  </pre> 
</figure>

## Registry Set ## {#datamodel-registry-set}

A <dfn>Registry Set</dfn> links to all of the [=Registries=] owned
by a given [=Agent=]. A non-public document, it is accessed by or
on behalf of the [=Agent=] or their [=Trusted Agents=] via trusted
[=Applications=].

[Class Definition](interop.ttl#RegistrySet) -
[Shape Definition](interop.shex#RegistrySetShape) -
[Shape Tree Definition](interop.tree#RegistrySetTree)

<table class="classinfo data" align="left" id="classRegistrySet">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr>
      <th>Property</th>
      <th>Range</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>hasApplicationRegistry</td>
      <td>[ApplicationRegistry](#classApplicationRegistry)</td>
      <td>[=Application Registry=] for the [=Agent=]</td>
    </tr>
    <tr>
      <td>hasAccessGrantRegistry</td>
      <td>[AccessGrantRegistry](#classAccessGrantRegistry)</td>
      <td>[=Access Grant Registry=] for the [=Agent=]</td>
    </tr>
    <tr>
      <td>hasAccessReceiptRegistry</td>
      <td>[AccessReceiptRegistry](#classAccessReceiptRegistry)</td>
      <td>[=Access Receipt Registry=] for the [=Agent=]</td>
    </tr>
    <tr>
      <td>hasRemoteDataRegistry</td>
      <td>[RemoteDataRegistry](#classRemoteDataRegistry)</td>
      <td>[=Remote Data Registry=] for the [=Agent=]</td>
    </tr>
    <tr>
      <td>hasDataRegistry</td>
      <td>[DataRegistry](#classDataRegistry)</td>
      <td>[=Data Registry=] for the [=Agent=]</td>
    </tr>
  </tbody>
</table>

<figure>
  <figcaption>[=Agent=] at https://alice.example/#id</figcaption>  
  <pre class=include-code>
  path: snippets/alice.example/registries.ttl
  highlight: turtle
  </pre> 
</figure>

## Resource Hierarchy ## {#agents-hierarchy}

<table class="data tree" align="left">
  <col>
  <col>
  <col>
  <col>
  <thead>
    <tr>
      <th>Resource</th>
      <th>Class</th>
      <th>Shape</th>
      <th>Shape Tree</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>`/#me`</td>
      <td>[Agent](#classAgent)</td>
      <td>[AgentShape](interop.shex#AgentShape)</td>
      <td>[AgentTree](interop.tree#AgentTree)</td>
    </tr>
    <tr>
      <td>`/registries`</td>
      <td>[RegistrySet](interop.ttl#RegistrySet)</td>
      <td>[RegistrySetShape](interop.shex#RegistrySetShape)</td>
      <td>[RegistrySetTree](interop.tree#RegistrySetTree)</td>
    </tr>
    <tr>
      <td>`/inbox/access`</td>
      <td><a href="https://www.w3.org/ns/ldp#inbox" class="vocab">ldp:inbox</a></td>
      <td>-</td>
      <td>[AccessInboxTree](interop.tree#AccessInboxTree)</td>
    </tr>
    <tr>
      <td>`/inbox/general`</td>
      <td><a href="https://www.w3.org/ns/ldp#inbox" class="vocab">ldp:inbox</a></td>
      <td>-</td>
      <td>-</td>
    </tr>
  </tbody>
</table>

[=Agent=] resources <em class="rfc2119">MAY</em> use any resource or
subject names. The names used herein have been selected for comprehension
and readability.

## Permission Model ## {#agents-permissions}

<figure>
  <table class="data permissions" align="left">
    <col>
    <colgroup></colgroup>
    <colgroup></colgroup>
    <colgroup></colgroup>
    <colgroup span=2></colgroup>
    <thead>
      <tr>
        <th></th>
        <th scope="colgroup">Agent</th>
        <th scope="colgroup">Public</th>
        <th scope="colgroup">Trusted Agents</th>
        <th scope="colgroup">Other Agents Granted Access</th>
      </tr>
      <tr>
        <th scope="col">Resource</th>
        <th scope="col">Access</th>
        <th scope="col">Access</th>
        <th scope="col">Access</th>
        <th scope="col">Subject</th>
        <th scope="col">Access</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>`/`</td>
        <td>Control</td>
        <td>Read</td>
        <td>Control</td>
        <td>-</td>
        <td>-</td>
      </tr>
      <tr>
        <td>`/registries`</td>
        <td>Control</td>
        <td>-</td>
        <td>Control</td>
        <td>-</td>
        <td>-</td>
      </tr>
    </tbody>
  </table>
</figure>
