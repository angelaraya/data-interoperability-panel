Application Registration {#appreg}
=====================

Application Registration lets [=Agents=] register and track the
[=Applications=] they’ve decided to use. It provides a dedicated place to
store internal data specific to the function of a given [=Application=].

<div class="note">
Giving [=Applications=] their own private data space in Solid may seem
counterintuitive to Solid’s proposition to decouple data and [=Applications=].

However, some data is extremely specific to the function of a particular
[=Application=], and has absolutely no value to any others. Forcing that data
into standard types and structures can lead to mixing in with the
interoperable data, creating convoluted vocabularies, [=shape trees=], and
[=shapes=] that inhibit adoption by others.

Giving [=Applications=] a private space where they can store internal data
is therefore a key factor in broad interoperability,
because it protects interoperable data from pollution by narrowly
focused elements.
</div>

Note: See
[Solid Application Interoperability Operations and API](https://solid.github.io/data-interoperability-panel/api/#appreg)
for a detailed explanation of how Application Registrations should be processed.

## Application Registry ## {#datamodel-application-registry}

An <dfn>Application Registry</dfn> is a collection of [=Application Registrations=].

The [=Application Registry=] is linked to an [=Agent=] via their [=Registry Set=].

Each [=Application=] an [=Agent=] registers has an [=Application Registration=].
An [=Application Registry=] links to any number of [=Application Registrations=].

[Class Definition](interop.ttl#ApplicationRegistry) -
[Shape Definition](interop.shex#ApplicationRegistryShape) -
[Shape Tree Definition](interop.tree#ApplicationRegistryTree)

<table class="classinfo data" align="left" id="classApplicationRegistry">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr>
      <th>Property</th>
      <th>Range</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>hasRegistration</td>
      <td>[ApplicationRegistration](#classApplicationRegistration)</td>
      <td>Link to an associated [=Application Registration=]</td>
    </tr>
  </tbody>
</table>

<figure>
  <figcaption>An [=Application Registry=] at https://alice.example/applications/
  linking to several [=Application Registrations=]</figcaption>
  <pre class=include-code>
  path: snippets/alice.example/application-registry.ttl
  highlight: turtle
  show: 5-11
  </pre>
</figure>

## Application Registration ## {#datamodel-application-registration}

An <dfn>Application Registration</dfn> provides the [=Agent=]
with a place to maintain metadata, state, preferences, and
other application-specific data associated with a given [=Application=] they
have elected to use.

[Class Definition](interop.ttl#ApplicationRegistration) -
[Shape Definition](interop.shex#ApplicationRegistrationShape) -
[Shape Tree Definition](interop.tree#ApplicationRegistrationTree)

<table class="classinfo data" align="left" id="classApplicationRegistration">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr>
      <th>Property</th>
      <th>Range</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>registeredBy</td>
      <td>[Agent](#classAgent)</td>
      <td>[=Agent=] that registered the [=Application Registration=]</td>
    </tr>
    <tr>
      <td>registeredWith</td>
      <td>[Application](#classApplication)</td>
      <td>[=Application=] used to create the [=Application Registration=]</td>
    </tr>
    <tr>
      <td>registeredAt</td>
      <td>xsd:dateTime</td>
      <td>Date and time the [=Application Registration=] was created</td>
    </tr>
    <tr>
      <td>updatedAt</td>
      <td>xsd:dateTime</td>
      <td>Date and time the [=Application Registration=] was updated</td>
    </tr>
    <tr>
      <td>registeredApplication</td>
      <td>[Application](#classApplication)</td>
      <td>The [=Application=] that was registered</td>
    </tr>
    <tr>
      <td>hasAccessReceipt</td>
      <td>[AccessReceipt](#classAccessReceipt)</td>
      <td>An [=Access Receipt=] that lets the [=Application=] know what
      the [=Agent=] has granted them access to</td>
    </tr>
  </tbody>
</table>

<figure>
  <figcaption>An [=Application Registration=] at
  https://alice.pod.example/applications/705563552198b6fb3efc40717872aa2ec35d669c1095cc5d665f499ec5d7e23a/
  </figcaption>
  <pre class=include-code>
  path: snippets/alice.example/705563552198b6fb3efc40717872aa2ec35d669c1095cc5d665f499ec5d7e23a.ttl
  highlight: turtle
  show: 8-15
  </pre>
</figure>

## Resource Hierarchy ## {#appreg-hierarchy}

<table class="data tree" align="left">
  <col>
  <col>
  <col>
  <col>
  <thead>
    <tr>
      <th>Resource</th>
      <th>Class</th>
      <th>Shape</th>
      <th>Shape Tree</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>`/applications/`</td>
      <td>[ApplicationRegistry](#classApplicationRegistry)</td>
      <td>[ApplicationRegistryShape](interop.shex#ApplicationRegistryShape)</td>
      <td>[ApplicationRegistryTree](interop.tree#ApplicationRegistryTree)</td>
    </tr>
    <tr>
      <td>`-- 70556355...c5d7e23a/`</td>
      <td>[ApplicationRegistration](#classApplicationRegistration)</td>
      <td>[ApplicationRegistrationShape](interop.shex#ApplicationRegistrationShape)</td>
      <td>[ApplicationRegistrationTree](interop.tree#ApplicationRegistrationTree)</td>
    </tr>
    <tr>
      <td>`---- 04ca5ba7...f3a25ba0`</td>
      <td>[AccessReceipt](#classAccessReceipt)</td>
      <td>[AccessReceiptShape](interop.shex#AccessReceiptShape)</td>
      <td>[AccessReceiptTree](interop.tree#AccessReceiptTree)</td>
    </tr>
    <tr>
      <td>`---- ex-cache-1122`</td>
      <td>-</td>
      <td>-</td>
      <td>-</td>
    </tr>
    <tr>
      <td>`-- ede6aa50...830e2a42/`</td>
      <td>[ApplicationRegistration](#classApplicationRegistration)</td>
      <td>[ApplicationRegistrationShape](interop.shex#ApplicationRegistrationShape)</td>
      <td>[ApplicationRegistrationTree](interop.tree#ApplicationRegistrationTree)</td>
    </tr>
    <tr>
      <td>`---- 2af133d6...78e343ba`</td>
      <td>[AccessReceipt](#classAccessReceipt)</td>
      <td>[AccessReceiptShape](interop.shex#AccessReceiptShape)</td>
      <td>[AccessReceiptTree](interop.tree#AccessReceiptTree)</td>
    </tr>
    <tr>
      <td>`---- ex-internal-idx`</td>
      <td>-</td>
      <td>-</td>
      <td>-</td>
    </tr>
    <tr>
      <td>`-- 150dca42...5b640673/`</td>
      <td>[ApplicationRegistration](#classApplicationRegistration)</td>
      <td>[ApplicationRegistrationShape](interop.shex#ApplicationRegistrationShape)</td>
      <td>[ApplicationRegistrationTree](interop.tree#ApplicationRegistrationTree)</td>
    </tr>
    <tr>
      <td>`---- 14f8bfb9...e42f7084`</td>
      <td>[AccessReceipt](#classAccessReceipt)</td>
      <td>[AccessReceiptShape](interop.shex#AccessReceiptShape)</td>
      <td>[AccessReceiptTree](interop.tree#AccessReceiptTree)</td>
    </tr>
    <tr>
      <td>`-- b3564e72...0069f536/`</td>
      <td>[ApplicationRegistration](#classApplicationRegistration)</td>
      <td>[ApplicationRegistrationShape](interop.shex#ApplicationRegistrationShape)</td>
      <td>[ApplicationRegistrationTree](interop.tree#ApplicationRegistrationTree)</td>
    </tr>
  </tbody>
</table>

The [=Application Registry=] MAY use any  resource or subject name.

The resource name for an [=Application Registration=] container
MUST be a SHA-256 hash encoding of the [=identity=] for the
registered [=Application=], which is linked via
[interop:registeredApplication](#classApplicationRegistration).

:: <b>Example Application Identity:</b> `https://app.example/profile/id#agent`
:: <b>SHA-256 Hash:</b> `705563552198b6fb3efc40717872aa2ec35d669c1095cc5d665f499ec5d7e23a`

Issue: Is it necessary to use a one-way hash for application registration
resource names. [Github issue](https://github.com/solid/data-interoperability-panel/issues/48)

[=Application Registrations=] use containers so that registered
[=Applications=] have dedicated space to store internal, non-interoperable
data. In the figure above, we can see an application-specific cache
resource (`ex-cache-1122`) and an internal index (`ex-internal-idx`).


## Permission Model ## {#appreg-permissions}

<b>Notable items:</b>

* There is no public access to any data in an [=Application Registry=]
* Only the [=Agent=] or [=Trusted Agents=] have the ability to manage
    contents and permissions across [=Application Registries=], including
    the creation and modification of [=Application Registrations=].
* A given registered [=Application=] has Read,Append+ access to its
    [=Application Registration=], [=Access Receipt=], and read/write access to
    the remaining data space inside of the container.
    It does not get control privileges.

Note: Append+ indicates that Read/Write is granted
to the subsequently created resource.

<figure>
  <table class="data permissions" align="left">
    <col>
    <col>
    <colgroup></colgroup>
    <colgroup></colgroup>
    <colgroup></colgroup>
    <colgroup span=2></colgroup>
    <thead>
      <tr>
        <th></th>
        <th></th>
        <th scope="colgroup">Agent</th>
        <th scope="colgroup">Public</th>
        <th scope="colgroup">Trusted Agents</th>
        <th scope="colgroup">Other Agents</th>
      </tr>
      <tr>
        <th scope="col">Resource</th>
        <th scope="col"></th>
        <th scope="col">Access</th>
        <th scope="col">Access</th>
        <th scope="col">Access</th>
        <th scope="col">Subject</th>
        <th scope="col">Access</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>`/applications/`</td>
        <td>[=Application Registry=]</td>
        <td>Control</td>
        <td>-</td>
        <td>Control</td>
        <td>-</td>
        <td>-</td>
      </tr>
      <tr>
        <td>`-- 70556355...c5d7e23a`</td>
        <td>[=Application Registration=]</td>
        <td>Control</td>
        <td>-</td>
        <td>Control</td>
        <td>Registered [=Application=]</td>
        <td>Read/Append+</td>
      </tr>
      <tr>
        <td>`---- 04ca5ba7...f3a25ba0`</td>
        <td>[=Access Receipt=]</td>
        <td>Control</td>
        <td>-</td>
        <td>Control</td>
        <td>Registered [=Application=]</td>
        <td>Read</td>
      </tr>
      <tr>
        <td>`---- ex-cache-1122`</td>
        <td>-</td>
        <td>Control</td>
        <td>-</td>
        <td>Control</td>
        <td>Registered [=Application=]</td>
        <td>Read/Write</td>
      </tr>
      <tr>
        <td>`-- ede6aa50...830e2a42`</td>
        <td>[=Application Registration=]</td>
        <td>Control</td>
        <td>-</td>
        <td>Control</td>
        <td>Registered [=Application=]</td>
        <td>Read/Append+</td>
      </tr>
      <tr>
        <td>`---- 2af133d6...78e343ba`</td>
        <td>[=Access Receipt=]</td>
        <td>Control</td>
        <td>-</td>
        <td>Control</td>
        <td>Registered [=Application=]</td>
        <td>Read</td>
      </tr>
      <tr>
        <td>`---- ex-internal-idx`</td>
        <td>-</td>
        <td>Control</td>
        <td>-</td>
        <td>Control</td>
        <td>Registered [=Application=]</td>
        <td>Read/Write</td>
      </tr>
      <tr>
        <td>`-- 150dca42...5b640673`</td>
        <td>[=Application Registration=]</td>
        <td>Control</td>
        <td>-</td>
        <td>Control</td>
        <td>Registered [=Application=]</td>
        <td>Read/Append+</td>
      </tr>
      <tr>
        <td>`---- 14f8bfb9...e42f7084`</td>
        <td>[=Access Receipt=]</td>
        <td>Control</td>
        <td>-</td>
        <td>Control</td>
        <td>Registered [=Application=]</td>
        <td>Read</td>
      </tr>
      <tr>
        <td>`-- b3564e72...0069f536`</td>
        <td>[=Application Registration=]</td>
        <td>Control</td>
        <td>-</td>
        <td>Control</td>
        <td>Registered [=Application=]</td>
        <td>Read/Append+</td>
      </tr>
    </tbody>
  </table>
</figure>
