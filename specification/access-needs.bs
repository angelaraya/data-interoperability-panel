Access Needs {#needs}
=====================

## Overview ## {#needs-overview}

[=Agents=] or [=Applications=] in the [=ecosystem=] often require access to
data controlled by some other [=Agent=]. Consequently, a common way to explain
and communicate data needs between these parties is required.

A given [=Agent=] or [=Application=] expresses their access needs by
providing one or more [=Access Need Groups=] to the [=Agent=] controlling
the data they require access to. The channels through which these may be
communicated are detailed in [[SAI-API#authz-workflows]].

Each [=Access Need Group=] is associated with up to three types of needs:

* [=Access Needs=] represent a need to access a particular type of data in 
    a [=Data Registry=] or [=Remote Data Registry=], 
    identified by the [=shape tree=] type. 
* [=Trusted Needs=] represent a need for elevated access to entire [=Registries=],
    [=Registry Sets=], or the [=Identity Profile Document=] for the [=Agent=]

[=Access Need Groups=] are essential to an [=Agent's=] decision-making
when determining whether to grant access, as illustrated in the 
[[SAI-API#present-grant]] workflow. They are stored as part of the [=Access Grant=] 
in the [=Access Grant Registry=].

Note: See
[Solid Application Interoperability Operations and API](https://solid.github.io/data-interoperability-panel/api/#needs)
for a detailed explanation of how Access Needs should be processed.

## Data Model ## {#needs-datamodel}

### Access Need Group ### {#needs-access-need-group}

An <dfn>Access Need Group</dfn> is a collection of [=Access Needs=]
and/or [=Trusted Needs=] that a given [=Agent=] and/or [=Application=] 
uses to communicate an access request to other [=Agents=].

An [=Access Need Group=] links to an [=Access Decorator Index=] of
different [=Access Decorator Series=] that explain the [=Access Need Group=]
and [=Access Needs=] in different languages. Each [=Access Decorator Series=]
points to an [=Access Decorator Resource=], which contains the actual 
language-specific content mappings.

[Class Definition](interop.ttl#AccessNeedGroup) -
[Shape Definition](interop.shex#AccessNeedGroupShape)

<table class="classinfo data" align="left" id="classAccessNeedGroup">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr>
      <th>Property</th>
      <th>Range</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>hasAccessNeedDecoratorIndex</td>
      <td>-</td>
      <td>Index of [=Access Decorator Resources=] to describe
      [=Access Need Groups=], [=Access Needs=], and [=Trusted Needs=]</td>
    </tr>
    <tr>
      <td>hasAccessNeedGroupDecorator</td>
      <td>[AccessNeedGroupDecorator](#classAccessNeedGroupDecorator)</td>
      <td>[=Access Need Group Decorator=] that describes the [=Access Need Group=]</td>
    </tr>
    <tr>
      <td>accessNecessity</td>
      <td>`interop:AccessRequired`, `interop:AccessOptional`</td>
      <td>Necessity of the access to the requesting party</td>
    </tr>
    <tr>
      <td>accessScenario</td>
      <td>`interop:PersonalAccess`, `interop:SharedAccess`</td>
      <td>Context in which the access group should be presented</td>
    </tr>
    <tr>
      <td>authenticatesAs</td>
      <td>[=Agent=] or `interop:Pilot`</td>
      <td>[=Agent=] or [=Agent=] piloting an [=Application=]</td>
    </tr>
    <tr>
      <td>hasAccessNeed</td>
      <td>[AccessNeed](#classAccessNeed)</td>
      <td>Link to an [=Access Need=]</td>
    </tr>
    <tr>
      <td>hasTrustedNeed</td>
      <td>[TrustedNeed](#classTrustedNeed)</td>
      <td>Link to a [=Trusted Need=]</td>
    </tr>
  </tbody>
</table>

<figure>
  <figcaption>An example [=Access Need Group=]</figcaption>  
  <pre class=include-code>
  path: snippets/acmeproject.example/acmeproject.example.ttl
  highlight: turtle
  show: 19-25
  </pre> 
</figure>

### Access Need ### {#needs-access-need}

An <dfn>Access Need</dfn> represents the requirement of one specific type
of data represented by a [=shape tree=], as part of an [=Access Need Group=].

Each [=Access Need=] represents a request to access, create, or manage
all or a subset of data in [=Data Registries=] and/or [=Remote Data Registries=].

In a [=Data Registry=], they can also request access to specific 
[=Data Instances=] associated with a [=Data Registration=] for a given 
[=shape tree=] if they have advance knowledge of their existence.

[=Shape trees=] provide both physical and virtual hierarchies.
It is often the case that a [=shape tree=] which virtually references 
other [=shape trees=] will be assigned to an [=Access Need=]. The 
referenced [=shape trees=] can then be assigned to 
[=Referenced Access Needs=] that the [=Access Need=] links to.

Specific [=Data Instances=] may be requested by explicitly
associating them with the [=Access Need=] via
[hasDataInstance](#classAccessNeed).

Each [=Access Need=] has one or more [=access modes=], and a property that
indicates the necessity of the [=Access Need=]; *required* or
*optional*. For example, an [=Access Need=] for read access to
[=shape tree=] `N` can be identified as a required item in the
[=Access Need Group=].

[=Access Needs=] are described using language-specific
[=Access Need Decorators=].

[Class Definition](interop.ttl#AccessNeed) -
[Shape Definition](interop.shex#AccessNeedGroup)

<table class="classinfo data" align="left" id="classAccessNeed">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr>
      <th>Property</th>
      <th>Range</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>inAccessNeedGroup</td>
      <td>[AccessNeedGroup](#classAccessNeedGroup)</td>
      <td>[=Access Need Group=] that the [=Access Need=] is part of</td>
    </tr>
    <tr>
      <td>hasAccessNeedDecorator</td>
      <td>[AccessNeedDecorator](#classAccessNeedDecorator)</td>
      <td>Decorator that explains the reason for the access need in the
      preferred language of the [=Agent=]</td>
    </tr>
    <tr>
      <td>registeredShapeTree</td>
      <td>`st:ShapeTree`</td>
      <td>The [=shape tree=] requested by the [=Access Need=]</td>
    </tr>
    <tr>
      <td>hasShapeTreeDecorator</td>
      <td>`st:ShapeTreeDecorator`</td>
      <td>Decorator associated with the [=shape tree=] that describes the
      name of the shape-tree and what data it represents in the preferred
      language of the [=Agent=]</td>
    </tr>
    <tr>
      <td>hasDataInstance</td>
      <td>-</td>
      <td>Request specific [=Data Instance=] of the registered
      [=shape tree=]. Requires advance knowledge of the 
      [=Data Instance=]</td>
    </tr>
    <tr>
      <td>accessMode</td>
      <td>`acl:Read, acl:Write, acl:Control, acl:Append`</td>
      <td>Requested modes of access for the [=Access Need=]</td>
    </tr>
    <tr>
      <td>accessNecessity</td>
      <td>`interop:AccessRequired`, `interop:AccessOptional`</td>
      <td>Necessity of the access to the requesting party</td>
    </tr>
    <tr>
      <td>supportedBy</td>
      <td>[AccessNeed](#classAccessNeed)</td>
      <td>An [=Access Need=] whose [=shape tree=] `st:supports` the
      [=shape tree=] of this [=Access Need=]</td>
    </tr>
    <tr>
      <td>supports</td>
      <td>[AccessNeed](#classAccessNeed)</td>
      <td>An [=Access Need=] that the [=shape tree=] of this
      [=Access Need=] `st:supports`</td>
    </tr>        
    <tr>
      <td>hasReferencedAccessNeed</td>
      <td>[ReferencedAccessNeed](#classReferencedAccessNeed)</td>
      <td>[=Referenced Access Need=] linked to [=Access Need=], whose
      [=shape tree=] `st:references` the [=shape tree=] associated
      with the [=Referenced Access Need=].
      </td>
    </tr>
    <tr>
      <td>hasDataGrant</td>
      <td>[DataGrant](#classDataGrant)</td>
      <td>[=Data Grant=] associated with the [=Access Need=],
      established when the [=Access Grant=] is created</td>
    </tr>
    <tr>
      <td>hasRemoteDataGrant</td>
      <td>[RemoteDataGrant](#classRemoteDataGrant)</td>
      <td>[=Remote Data Grant=] associated with the [=Access Need=],
      established when the [=Access Grant=] is created</td>
    </tr>    
  </tbody>
</table>

<figure>
  <figcaption>An example [=Access Need=]</figcaption>  
  <pre class=include-code>
  path: snippets/acmeproject.example/acmeproject.example.ttl
  highlight: turtle
  show: 27-35
  </pre> 
</figure>

### Referenced Access Need ### {#needs-referenced-access-need}

A <dfn>Referenced Access Need</dfn> is linked directly to an [=Access Need=],
and represents an access request for data represented by a [=shape tree=] that
is `st:referenced` by the [=shape tree=] of the linked [=Access Need=].

[Class Definition](interop.ttl#ReferencedAccessNeed) -
[Shape Definition](interop.shex#ReferencedAccessNeedShape)

<table class="classinfo data" align="left" id="classReferencedAccessNeed">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr>
      <th>Property</th>
      <th>Range</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>hasAccessNeed</td>
      <td>[AccessNeed](#classAccessNeed)</td>
      <td>[=Access Need=] that the [=Referenced Access Need=] is linked to</td>
    </tr>
    <tr>
      <td>hasAccessNeedDecorator</td>
      <td>[AccessNeedDecorator](#classAccessNeedDecorator)</td>
      <td>Decorator that explains the reason for the access need in the
      preferred language of the [=Agent=]</td>
    </tr>
    <tr>
      <td>registeredShapeTree</td>
      <td>`st:ShapeTree`</td>
      <td>The [=shape tree=] requested by the [=Referenced Access Need=]</td>
    </tr>
    <tr>
      <td>hasShapeTreeDecorator</td>
      <td>`st:ShapeTreeDecorator`</td>
      <td>Decorator associated with the [=shape tree=] that describes the
      name of the shape-tree and what data it represents in the preferred
      language of the [=Agent=]</td>
    </tr>
    <tr>
      <td>hasDataInstance</td>
      <td>-</td>
      <td>Request specific [=Data Instance=] of the registered
      [=shape tree=]. Requires advance knowledge of the 
      [=Data Instance=]</td>
    </tr>
    <tr>
      <td>accessMode</td>
      <td>`acl:Read, acl:Write, acl:Control, acl:Append`</td>
      <td>Requested modes of access for the [=Referenced Access Need=]</td>
    </tr>
    <tr>
      <td>accessNecessity</td>
      <td>`interop:AccessRequired`, `interop:AccessOptional`</td>
      <td>Necessity of the access to the requesting party</td>
    </tr>
    <tr>
      <td>supportedBy</td>
      <td>[AccessNeed](#classAccessNeed)</td>
      <td>An [=Access Need=] whose [=shape tree=] `st:supports` the
      [=shape tree=] of this [=Referenced Access Need=]</td>
    </tr>
    <tr>
      <td>supports</td>
      <td>[AccessNeed](#classAccessNeed)</td>
      <td>An [=Access Need=] that the [=shape tree=] of this
      [=Referenced Access Need=] `st:supports`</td>
    </tr>        
    <tr>
      <td>hasReferencedDataGrant</td>
      <td>[ReferencedDataGrant](#)</td>
      <td>[=Referenced Data Grant=] associated with the 
      [=Referenced Access Need=], established when the [=Access Grant=] 
      is created</td>
    </tr>
    <tr>
      <td>hasReferencedRemoteDataGrant</td>
      <td>[ReferencedRemoteDataGrant](#)</td>
      <td>[=Referenced Remote Data Grant=] associated with the 
      [=Referenced Access Need=], established when the [=Access Grant=] 
      is created</td>
    </tr>    
  </tbody>
</table>

<figure>
  <figcaption>An example [=Referenced Access Need=]</figcaption>  
  <pre class=include-code>
  path: snippets/acmeproject.example/acmeproject.example.ttl
  highlight: turtle
  show: 37-43
  </pre> 
</figure>

### Trusted Need ### {#needs-trusted}

A <dfn>Trusted Need</dfn> represents the request for elevated access
to various types of top-level resources, including 
the [=Identity Profile Document=], [=Registry Sets=], or specific 
[=Registries=].

Each [=Trusted Need=] has a single `interop:trustedWithType`, which identifies
the type of trusted resource that is being requested.

Each [=Trusted Need=] has one or more [=access modes=], and a property that
indicates the necessity of the [=Access Need=]; *required* or
*optional*. For example, an [=Access Need=] for read access to
[=shape tree=] `N` can be identified as a required item in the
[=Access Need Group=].

[=Trusted Needs=] are described using language-specific
[=Access Need Decorators=].

[Class Definition](interop.ttl#TrustedNeed) -
[Shape Definition](interop.shex#TrustedNeedShape)

<table class="classinfo data" align="left" id="classTrustedNeed">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr>
      <th>Property</th>
      <th>Range</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>inAccessNeedGroup</td>
      <td>[AccessNeedGroup](#classAccessNeedGroup)</td>
      <td>[=Access Need Group=] that the [=Trusted Need=] is part of</td>
    </tr>
    <tr>
      <td>trustedWithType</td>
      <td>  `interop:Agent`, `interop:ApplicationRegistry`
        `interop:DataRegistry`, `interop:AccessGrantRegistry`,
        `interop:AccessReceiptRegistry`, `interop:RemoteDataRegistry`
      </td>
      <td>Resource types that can be requested through a [=Trusted Need=]</td>
    </tr>
    <tr>
      <td>accessMode</td>
      <td>`acl:Read, acl:Write, acl:Control, acl:Append`</td>
      <td>Requested modes of access for the [=Trusted Need=]</td>
    </tr>
    <tr>
      <td>accessNecessity</td>
      <td>`interop:AccessRequired`, `interop:AccessOptional`</td>
      <td>Necessity of the access to the requesting party</td>
    </tr>
    <tr>
      <td>hasTrustedGrant</td>
      <td>[TrustedGrant](#classTrustedGrant)</td>
      <td>[=Trusted Grant=] associated with the 
      [=Trusted Need=], established when the [=Access Grant=] 
      is created</td>
    </tr>
  </tbody>
</table>

### Access Request ### {#needs-access-request}

An <dfn>Access Request</dfn> is used to send [=Access Need Groups=] from
one [=Agent=] to another.

[Class Definition](interop.ttl#AccessRequest) -
[Shape Definition](interop.shex#AccessRequestShape)

<table class="classinfo data" align="left" id="classAccessRequest">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr>
      <th>Property</th>
      <th>Range</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>fromAgent</td>
      <td>[Agent](#classAgent)</td>
      <td>The [=Agent=] who sent the [=Access Request=]</td>
    </tr>
    <tr>
      <td>toAgent</td>
      <td>[Agent](#classAgent)</td>
      <td>The [=Agent=] the [=Access Request=] is meant for</td>
    </tr>
    <tr>
      <td>hasAccessNeedGroup</td>
      <td>[AccessNeedGroup](#classAccessNeedGroup)</td>
      <td>One or more [=Access Need Groups=] detailing the access requested</td>
    </tr>
  </tbody>
</table>

<figure>
  <figcaption>An [=Access Request=] sent from one agent to another</figcaption>  
  <pre class=include-code>
  path: snippets/alice.example/66e90b51-abd1-444c-b1df-74370c8c7969.ttl
  highlight: turtle
  show: 6-9
  </pre> 
</figure>

### Access Decorator Index ### {#needs-access-decorator-index}

An <dfn>Access Decorator Index</dfn> is a listing of one or more
[=Access Decorator Series=].

[Class Definition](interop.ttl#AccessDecoratorIndex) -
[Shape Definition](interop.shex#AccessDecoratorIndexShape)

<table class="classinfo data" align="left" id="classAccessDecoratorIndex">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr>
      <th>Property</th>
      <th>Range</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>defaultLanguage</td>
      <td>`xsd:language`</td>
      <td>Default language to select if not provided as input</td>
    </tr>
    <tr>
      <td>hasSeries</td>
      <td>[AccessDecoratorSeries](#classAccessDecoratorSeries)</td>
      <td>Link to an [=Access Decorator Series=]</td>
    </tr>
  </tbody>
</table>

<figure>
  <figcaption>[=Access Decorator Index=] document linked by the
  project management access need group</figcaption>  
  <pre class=include-code>
  path: snippets/acmeproject.example/acmeproject-decorator-index.ttl
  highlight: turtle
  show: 4-7
  </pre> 
</figure>

#### Access Decorator Series #### {#needs-access-decorator-series}

An <dfn>Access Decorator Series</dfn> has one or
more [=Access Decorator Versions=] in a given language.

[Class Definition](interop.ttl#AccessDecoratorSeries) -
[Shape Definition](interop.shex#AccessDecoratorSeriesShape)

<table class="classinfo data" align="left" id="classAccessDecoratorSeries">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr>
      <th>Property</th>
      <th>Range</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>usesLanguage</td>
      <td>xsd:language</td>
      <td>Language code associated with the [=Access Decorator Series=]</td>
    </tr>
    <tr>
      <td>hasVersion</td>
      <td>[AccessDecoratorVersion](#classAccessDecoratorVersion)</td>
      <td>Links to an [=Access Decorator Version=] in the series</td>
    </tr>
  </tbody>
</table>

<figure>
  <figcaption>[=Access Decorator Series=] containing english decorator versions</figcaption>  
  <pre class=include-code>
  path: snippets/acmeproject.example/acmeproject-decorator-index.ttl
  highlight: turtle
  show: 9-12
  </pre> 
</figure>

#### Access Decorator Version #### {#needs-access-decorator-version}

An <dfn>Access Decorator Version</dfn> is a versioned instance of
a given [=Access Decorator Resource=].

[Class Definition](interop.ttl#AccessDecoratorVersion) -
[Shape Definition](interop.shex#AccessDecoratorVersionShape)

<table class="classinfo data" align="left" id="classAccessDecoratorVersion">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr>
      <th>Property</th>
      <th>Range</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>isVersion</td>
      <td>xsd:string</td>
      <td>Semantic version of the [=Access Decorator Resource=] (e.g. "1.1.0")</td>
    </tr>
    <tr>
      <td>hasSHA256</td>
      <td>xsd:string</td>
      <td>SHA-256 hash of the linked [=Access Decorator Resource=]</td>
    </tr>
    <tr>
      <td>hasAccessDecoratorResource</td>
      <td>[AccessDecoratorResource](#classAccessDecoratorResource)</td>
      <td>Links to the actual [=Access Decorator Resource=] document</td>
    </tr>
  </tbody>
</table>

<figure>
  <figcaption>[=Access Decorator Versions=] for english</figcaption>  
  <pre class=include-code>
  path: snippets/acmeproject.example/acmeproject-decorator-index.ttl
  highlight: turtle
  show: 14-24
  </pre> 
</figure>

### Access Decorator Resource ### {#needs-access-decorator-resource}

An <dfn>Access Decorator Resource</dfn> is a document that contains
[=Access Need Group Decorators=] and [=Access Need Decorators=] in a
given language.

[Class Definition](interop.ttl#AccessDecoratorResource) -
[Shape Definition](interop.shex#AccessDecoratorResourceShape)

<table class="classinfo data" align="left" id="classAccessDecoratorResource">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr>
      <th>Property</th>
      <th>Range</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><i>No properties</i></td>
      <td>-</td>
      <td>-</td>
    </tr>
  </tbody>
</table>

#### Access Need Group Decorator #### {#needs-access-need-group-decorator}

An <dfn>Access Need Group Decorator</dfn> provides a subject name and
more in depth description that explains why a given [=Access Need Group=]
is being requested of an [=Agent=].

[Class Definition](interop.ttl#AccessNeedGroupDecorator) -
[Shape Definition](interop.shex#AccessNeedGroupDecoratorShape)

<table class="classinfo data" align="left" id="classAccessNeedGroupDecorator">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr>
      <th>Property</th>
      <th>Range</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>hasAccessNeedGroup</td>
      <td>[AccessNeedGroup](#classAccessNeedGroup)</td>
      <td>[=Access Need Group=] the decorator applies to</td>
    </tr>
    <tr>
      <td>skos:preflabel</td>
      <td>`xsd:string`</td>
      <td>Short label (title) for the [=Access Need Group=]</td>
    </tr>
    <tr>
      <td>skos:definition</td>
      <td>`xsd:string`</td>
      <td>Description of why the [=Access Need Group=] requires the
      access it is requesting.</td>
    </tr>
  </tbody>
</table>

#### Access Need Decorator #### {#needs-access-need-decorator}

An <dfn>Access Need Decorator</dfn> provides a specific
explanation of why that data type is being requested.

[Class Definition](interop.ttl#AccessNeedDecorator) -
[Shape Definition](interop.shex#AccessNeedDecoratorShape)

<table class="classinfo data" align="left" id="classAccessNeedDecorator">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr>
      <th>Property</th>
      <th>Range</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>hasAccessNeedGroup</td>
      <td>[AccessNeedGroup](#classAccessNeedGroup)</td>
      <td>[=Access Need Group=] the decorator applies to</td>
    </tr>
    <tr>
      <td>registeredShapeTree</td>
      <td>`st:ShapeTree`</td>
      <td>[=Shape tree=] associated with the [=Access Need=] the decorator
      should apply to</td>
    </tr>
    <tr>
      <td>skos:prefLabel</td>
      <td>`xsd:string`</td>
      <td>Specific explanation of why that data type is being requested</td>
    </tr>
  </tbody>
</table>
