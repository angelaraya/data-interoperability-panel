Access Needs {#needs}
=====================

[=Social Agents=] and [=Applications=] in the [=ecosystem=] often 
require access to data controlled by some other [=Social Agent=]. 
Consequently, a common way to explain
and communicate data needs between these parties is required.

A given [=Social Agent=] or [=Application=] expresses their access needs by
providing one or more [=Access Need Groups=] to the [=Social Agent=] 
controlling the data they require access to. The channels through which 
these may be communicated are detailed in [[SAI-API#authz-workflows]].

Each [=Access Need Group=] is associated with one or more [=Access Needs=].

[=Access Needs=] represent a request to access a particular type of data
identified by [=shape tree=] type, corresponding with [=Data Registrations=] 
in a [=Data Registry=], an [=Identity Profile Document=], or a [=Registry Set=].

[=Access Need Groups=] are essential to a [=Social Agent's=] decision-making
when determining whether to grant access.

## Access Need Group ## {#access-need-group}

An <dfn>Access Need Group</dfn> is a collection of [=Access Needs=] 
used to communicate an access request to [=Social Agents=].

[=Access Need Groups=] are described using language-specific 
[=Access Need Group Decorators=].

[Class Definition](interop.ttl#AccessNeedGroup) -
[Shape Definition](interop.shex#AccessNeedGroupShape)

<table class="classinfo data" align="left" id="classAccessNeedGroup">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr>
      <th>Property</th>
      <th>Range</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>hasAccessDecoratorSet</td>
      <td>[AccessDecoratorSet](#classAccessDecoratorSet)</td>
      <td>Links to an [=Access Decorator Set=] containing 
      [=Access Need Group Decorators=] and [=Access Need Decorators=]
      in the preferred language of the [=Social Agent=]</td>
    </tr>
    <tr>
      <td>accessNecessity</td>
      <td>`interop:AccessRequired`, `interop:AccessOptional`</td>
      <td>Necessity of the access to the requesting party</td>
    </tr>
    <tr>
      <td>accessScenario</td>
      <td>`interop:PersonalAccess`, `interop:SharedAccess`</td>
      <td>Context in which the access group should be presented</td>
    </tr>
    <tr>
      <td>authenticatesAs</td>
      <td>`interop:SocialAgent` or `interop:Application`</td>
      <td>Access will be granted to the [=Social Agent=] or [=Application=]</td>
    </tr>
    <tr>
      <td>hasAccessNeed</td>
      <td>[AccessNeed](#classAccessNeed)</td>
      <td>Link to an [=Access Need=]</td>
    </tr>
  </tbody>
</table>

<figure>
  <figcaption>An example [=Access Need Group=] for Projectron -
  <a href="snippets/projectron.example/projectron.example.ttl">View</a></figcaption>  
  </figcaption>  
  <pre class=include-code>
  path: snippets/projectron.example/projectron.example.ttl
  highlight: turtle
  show: 9-29
  </pre> 
</figure>

## Access Need ## {#needs-access-need}

An <dfn>Access Need</dfn> represents the requirement of one specific type
of data represented by a [=shape tree=], as part of an [=Access Need Group=].

It is often the case that a [=shape tree=] associated with an 
[=Access Need=] references other [=shape trees=], providing a
path to request access to related types. Consequently,
[=Access Needs=] can be specified that *inherit* from other
[=Access Needs=] through a shape tree reference.

Specific [=Data Instances=] may be requested by explicitly
associating them with the [=Access Need=].

[=Access Needs=] are described using language-specific
[=Access Need Decorators=].

[Class Definition](interop.ttl#AccessNeed) -
[Shape Definition](interop.shex#AccessNeedGroup)

<table class="classinfo data" align="left" id="classAccessNeed">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr>
      <th>Property</th>
      <th>Range</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>registeredShapeTree</td>
      <td>`st:ShapeTree`</td>
      <td>The [=shape tree=] requested by the [=Access Need=]</td>
    </tr>
    <tr>
      <td>accessMode</td>
      <td>`acl:Read, acl:Write, acl:Update, acl:Create, acl:Delete, acl:Append`</td>
      <td>Requested modes of access for the [=Access Need=]</td>
    </tr>
    <tr>
      <td>creatorAccessMode</td>
      <td>`acl:Read, acl:Write, acl:Update, acl:Create, acl:Delete, acl:Append`</td>
      <td>Requested mode of access for the creator of a Data Instance. 
        Adds to the set of modes linked via 
        `interop:accessMode`. Only valid when `accessMode` includes
        `acl:Create`, `acl:Write`, or `acl:Append`</td>
    </tr>
    <tr>
      <td>accessNecessity</td>
      <td>`interop:AccessRequired`, `interop:AccessOptional`</td>
      <td>Necessity of the access to the requesting party</td>
    </tr>
    <tr>
      <td>hasDataInstance</td>
      <td>[=Data Instance=]</td>
      <td>Request specific [=Data Instance=] of the registered
      [=shape tree=]. Requires advance knowledge of the 
      [=Data Instance=]</td>
    </tr>
    <tr>
      <td>inheritsFromNeed</td>
      <td>[AccessNeed](#classAccessNeed)</td>
      <td>Links to another [=Access Need=] whose registeredShapeTree
      references the shape tree associated with the current
      [=Access Need=].</td>
    </tr>
  </tbody>
</table>

<figure>
  <figcaption>[=Access Needs=] for Projects and Tasks in an [=Access Need Group=] for Projectron -
  <a href="snippets/projectron.example/projectron.example.ttl">View</a></figcaption>
  <pre class=include-code>
  path: snippets/projectron.example/projectron.example.ttl
  highlight: turtle
  show: 17-45
  </pre> 
</figure>

## Access Decorators ## {#access-decorators}

### Access Need Group Decorator ### {#access-need-group-decorator}

An <dfn>Access Need Group Decorator</dfn> provides a short label or
title and a more in-depth description that explains why a given 
[=Access Need Group=] is being requested of a [=Social Agent=].

[Class Definition](interop.ttl#AccessNeedGroupDecorator) -
[Shape Definition](interop.shex#AccessNeedGroupDecoratorShape)

<table class="classinfo data" align="left" id="classAccessNeedGroupDecorator">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr>
      <th>Property</th>
      <th>Range</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>inAccessDecoratorSet</td>
      <td>[AccessDecoratorSet](#classAccessDecoratorSet)</td>
      <td>[=Access Decorator Set=] the decorator is part of</td>
    </tr>
    <tr>
      <td>hasAccessNeedGroup</td>
      <td>[AccessNeedGroup](#classAccessNeedGroup)</td>
      <td>[=Access Need Group=] the decorator applies to</td>
    </tr>
    <tr>
      <td>skos:preflabel</td>
      <td>`xsd:string`</td>
      <td>Short label (title) for the [=Access Need Group=]</td>
    </tr>
    <tr>
      <td>skos:definition</td>
      <td>`xsd:string`</td>
      <td>Description of why the [=Access Need Group=] requires the
      access it is requesting.</td>
    </tr>
  </tbody>
</table>

<figure>
  <figcaption>English [=Access Need Group Decorator=] for Projectron -
  <a href="snippets/projectron.example/access-en.ttl">View</a></figcaption>
  <pre class=include-code>
  path: snippets/projectron.example/access-en.ttl
  highlight: turtle
  show: 10-15
  </pre> 
</figure>

### Access Need Decorator ### {#access-need-decorator}

An <dfn>Access Need Decorator</dfn> provides a specific
explanation of why that data type is being requested by
a given [=Access Need=].

[Class Definition](interop.ttl#AccessNeedDecorator) -
[Shape Definition](interop.shex#AccessNeedDecoratorShape)

<table class="classinfo data" align="left" id="classAccessNeedDecorator">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr>
      <th>Property</th>
      <th>Range</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>inAccessDecoratorSet</td>
      <td>[AccessDecoratorSet](#classAccessDecoratorSet)</td>
      <td>[=Access Decorator Set=] the decorator is part of</td>
    </tr>
    <tr>
      <td>hasAccessNeedGroup</td>
      <td>[AccessNeedGroup](#classAccessNeedGroup)</td>
      <td>[=Access Need Group=] the decorator applies to</td>
    </tr>
    <tr>
      <td>skos:prefLabel</td>
      <td>`xsd:string`</td>
      <td>Specific explanation of why that data type is being requested</td>
    </tr>
  </tbody>
</table>

<figure>
  <figcaption>English [=Access Need Decorator=] for Projects -
  <a href="snippets/projectron.example/access-en.ttl">View</a></figcaption>
  <pre class=include-code>
  path: snippets/projectron.example/access-en.ttl
  highlight: turtle
  show: 17-21
  </pre> 
</figure>

### Access Decorator Set ### {#access-decorator-set}

An <dfn>Access Decorator Set</dfn> is a collection of [=Access Need Group Decorators=]
and [=Access Need Decorators=].

[Class Definition](interop.ttl#AccessDecoratorSet) -
[Shape Definition](interop.shex#AccessDecoratorSetShape)

<table class="classinfo data" align="left" id="classAccessDecoratorSet">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr>
      <th>Property</th>
      <th>Range</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>usesLanguage</td>
      <td>`xsd:language`</td>
      <td>Language that the [=Access Need Group Decorators=] and
      [=Access Needs=] in the Set use</td>
    </tr>
  </tbody>
</table>

<figure>
  <figcaption>English [=Access Decorator Set=] for Projectron -
  <a href="snippets/projectron.example/access-en.ttl">View</a></figcaption>
  <pre class=include-code>
  path: snippets/projectron.example/access-en.ttl
  highlight: turtle
  show: 6-30
  </pre> 
</figure>

## Access Request ## {#access-request}

An <dfn>Access Request</dfn> is used to send [=Access Need Groups=] from
one [=Agent=] to another.

[Class Definition](interop.ttl#AccessRequest) -
[Shape Definition](interop.shex#AccessRequestShape)

<table class="classinfo data" align="left" id="classAccessRequest">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr>
      <th>Property</th>
      <th>Range</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>fromSocialAgent</td>
      <td>[SocialAgent](#classSocialAgent)</td>
      <td>The [=Social Agent=] who sent the [=Access Request=]</td>
    </tr>
    <tr>
      <td>toSocialAgent</td>
      <td>[SocialAgent](#classSocialAgent)</td>
      <td>The [=Social Agent=] the [=Access Request=] is meant for</td>
    </tr>
    <tr>
      <td>hasAccessNeedGroup</td>
      <td>[AccessNeedGroup](#classAccessNeedGroup)</td>
      <td>One or more [=Access Need Groups=] detailing the access requested</td>
    </tr>
  </tbody>
</table>

<figure>
  <figcaption>An [=Access Request=] sent from one agent to another</figcaption>  
  <pre class=include-code>
  path: snippets/alice.example/66e90b51.ttl
  highlight: turtle
  show: 6-9
  </pre> 
</figure>
